{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","css","message","text","DialogItem","dialog","active","to","id","name","maxPostLength250","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","userItems","dialogsPage","usersData","map","x","key","messagesItems","messagesData","dialogs","dialogsItems","messages","values","sendMsg","newMessageBody","compose","connect","state","dispatch","newMessage","sendMessage","withAuthRedirect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCQpMC,EANC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAIC,SAAUH,EAAMI,O,QCO7BC,EARI,SAACL,GAChB,OACI,yBAAKC,UAAWC,IAAII,OAAS,IAAMJ,IAAIK,QACnC,kBAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,Q,kCCClDC,EAAmBC,YAAiB,KAgBpCC,EAAsBC,YAAU,CAElCC,KAAM,wBAFkBD,EAdL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACA,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAeX,GAC1BD,KAAK,iBACLa,YAAY,8BAEZ,6BAAK,6CA+BFC,EArBC,SAACxB,GACb,IAAMyB,EAAYzB,EAAM0B,YAAYC,UAAUC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEpB,GAAIA,GAAIoB,EAAEpB,QAC5FsB,EAAgB/B,EAAM0B,YAAYM,aAAaJ,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAASzB,KAAMyB,EAAEzB,KAAM0B,IAAKD,EAAEpB,QAM5F,OACI,yBAAKR,UAAWC,IAAI+B,SAChB,yBAAKhC,UAAWC,IAAIgC,cACfT,GAEL,yBAAKxB,UAAWC,IAAIiC,UACfJ,GAEL,kBAAClB,EAAD,CAAqBG,SAZT,SAACoB,GACjBpC,EAAMqC,QAAQD,EAAOE,qB,wBCbdC,sBACXC,aAhBkB,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,gBAIF,SAACgB,GACtB,MAAO,CACHL,QAAS,SAACM,GACND,EAASE,YAAYD,SAQ7BE,IAFWN,CAGbf","file":"static/js/4.26b6bfc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14NLX\",\"dialogsItems\":\"Dialogs_dialogsItems__2x7Ah\",\"active\":\"Dialogs_active__1lp7S\",\"dialog\":\"Dialogs_dialog__2LRO-\",\"messages\":\"Dialogs_messages__2Move\",\"message\":\"Dialogs_message__3kDe1\"};","import React from 'react';\r\nimport css from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={css.message}>{props.text}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport css from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={css.dialog + ' ' + css.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport css from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/Validators';\r\n\r\nconst maxPostLength250 = maxLengthCreator(250);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field component={Textarea} \r\n            validate={[requiredField, maxPostLength250]}\r\n            name='newMessageBody' \r\n            placeholder=\"enter your message here.\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'dialogAddMessageForm'\r\n  })(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    const userItems = props.dialogsPage.usersData.map(x => <DialogItem name={x.name} key={x.id} id={x.id} />);\r\n    const messagesItems = props.dialogsPage.messagesData.map(x => <Message text={x.text} key={x.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMsg(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.dialogsItems}>\r\n                {userItems}\r\n            </div>\r\n            <div className={css.messages}>\r\n                {messagesItems}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { sendMessage } from './../../redux/dialogsReducers';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMsg: (newMessage) => {\r\n            dispatch(sendMessage(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\n//roughly speaking \"connect\" returns HOC too, and withRoute is HOC, etc. It's just wrappers\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}